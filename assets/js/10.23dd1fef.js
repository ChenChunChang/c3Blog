(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{338:function(s,t,a){"use strict";a.r(t);var e=a(3),r=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"需求分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#需求分析"}},[s._v("#")]),s._v(" 需求分析")]),s._v(" "),t("p",[s._v("通过搜索商品的标题关键词搜索出对应的所有商品，比如输入"),t("code",[s._v("Cat")]),s._v("可以查询标题中包含"),t("code",[s._v("Cat")]),s._v("（不区分大小写）的所有商品：\n"),t("img",{attrs:{src:"https://img.whalenas.com:283/image/20210503215644.png",alt:""}})]),s._v(" "),t("h2",{attrs:{id:"实现1-0版本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现1-0版本"}},[s._v("#")]),s._v(" 实现1.0版本")]),s._v(" "),t("p",[s._v("看到这个需求首先能想到的就是使用数据库的like，模糊匹配关键词")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v("\n\ttbl_product\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v("\n\ttitle "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("LIKE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%cat%'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("但是如果我输入的关键词是"),t("code",[s._v("Cat Mat")]),s._v("，那么就一个商品也匹配不到了")]),s._v(" "),t("blockquote",[t("p",[s._v("实际应该需要将"),t("code",[s._v("Cat")]),s._v("和"),t("code",[s._v("Mat")]),s._v("这两个单词的商品全部查询出来")])]),s._v(" "),t("h2",{attrs:{id:"实现2-0版本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现2-0版本"}},[s._v("#")]),s._v(" 实现2.0版本")]),s._v(" "),t("p",[s._v("如果使用的是Mysql，那么我们可以使用Mysql的"),t("code",[s._v("REGEXP")]),s._v("关键字实现正则匹配\n对于上面的需求，我们只需要将"),t("code",[s._v("Cat")]),s._v("和"),t("code",[s._v("Mat")]),s._v("中的空格替换成通配符就可以了")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v("\n\tpet_product\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v("\n\ttitle "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("REGEXP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'cat[[:space:]a-zA-Z]+.*mat'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://img.whalenas.com:283/image/20210503223500.png",alt:""}})]),s._v(" "),t("h2",{attrs:{id:"mysql中的正则表达"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql中的正则表达"}},[s._v("#")]),s._v(" MySQL中的正则表达")]),s._v(" "),t("p",[s._v("MySQL中使用 REGEXP 操作符来进行正则表达式匹配。")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("模式")]),s._v(" "),t("th",[s._v("描述")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("^")]),s._v(" "),t("td",[s._v("匹配输入字符串的开始位置。如果设置了RegExp对象的Multiline属性，^也匹配'\\n'或'\\r'之后的位置")])]),s._v(" "),t("tr",[t("td",[s._v("$")]),s._v(" "),t("td",[s._v("匹配输入字符串的结束位置。如果设置了RegExp对象的Multiline 属性，$也匹配'\\n'或'\\r'之后的位置")])]),s._v(" "),t("tr",[t("td",[s._v(".")]),s._v(" "),t("td",[s._v("匹配除\"\\n\"之外的任何单个字符。要匹配包括'n'在内的任何字符,请使用象'[.\\n]'的模式。")])]),s._v(" "),t("tr",[t("td",[s._v("[…]")]),s._v(" "),t("td",[s._v("字符集合。匹配所包含的任意一个字符。 例如，'[abc]' 可以匹配\"plain\"中的'a'。")])]),s._v(" "),t("tr",[t("td",[s._v("[^…]")]),s._v(" "),t("td",[s._v("负值字符集合。匹配未包含的任意字符。例如，'[^abc]' 可以匹配\"plain\"中的'p'。")])]),s._v(" "),t("tr",[t("td",[s._v("p1|p2|p3")]),s._v(" "),t("td",[s._v("匹配p1或p2或p3。例如，'z")])]),s._v(" "),t("tr",[t("td",[s._v("*")]),s._v(" "),t("td",[s._v('匹配前面的子表达式零次或多次。例如，z0* 能匹配"z"以及"zoo"。*等价于{O,}')])]),s._v(" "),t("tr",[t("td",[s._v("+")]),s._v(" "),t("td",[s._v('匹配前面的子表达式一次或多次。例如，\'zo+\' 能匹配"zo"以及"zoo"，但不能匹配"z"。+等价于{1,}。')])]),s._v(" "),t("tr",[t("td",[s._v("{n}")]),s._v(" "),t("td",[s._v('n是一个非负整数。匹配确定的n次。例如，\'o{2}\'不能匹配"Bob"中的‘o\'，但是能匹配"food"中的两个0。')])]),s._v(" "),t("tr",[t("td",[s._v("{n,m}")]),s._v(" "),t("td",[s._v("m和n均为非负整数，其中n <= m。最少匹配n次且最多匹配m次。")])])])]),s._v(" "),t("ul",[t("li",[s._v("查找name字段中以'st'为开头的所有数据")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("mysql"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" person_tbl "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("REGEXP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^st'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("查找name字段中以'ok'为结尾的所有数据")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("mysql"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" person_tbl "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("REGEXP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ok$'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("查找name字段中包含'mar'字符串的所有数据")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("mysql"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" person_tbl "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("REGEXP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mar'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("查找name字段中以元音字符开头或以'ok'字符结尾的所有数据")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("mysql"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" person_tbl "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("REGEXP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^[aeiou]|ok$'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])}),[],!1,null,null,null);t.default=r.exports}}]);